* Installer
* tests
* dialog, gtkdialog, ncurses installer?
* documentation
* web configuration-schema creator/editor
* Edit configurations from emacs (ala M-x customize)
* Better composite options:

Example, in configurations:

(:section :database-configuration "Database configuration"
     (:engine "Engine" (:one-of (:my-sql  ;; my-sql configuration section define elsewhere
                                   (:configuration :my-sql))
                                (:postgres  ;; Inline section
				        (:section :postgres-configuration "Postgres configuration"
					          ...))
				(:file  ;; inline configuration, without requiring a new section
				   (:group
				         (:file "File" :pathname))))))

List of composite types (specifying and web editing):

(:section :webapp-configuration "Web application configuration"
        (:entry-points "Entry points"
	         (:many-of
		      (:group
		         (:entry-name :string)
			 (:entry-function :string)
			 (:entry-regex :string)))))

* A command line interface backend.

  Both interactive, and with command line processing. Completion.

* Deliver core as a shared library.

  - Deliver core as a shared library so that this can be used from any programming language.
  - Possible name: libconfig.
  - May have to implement using another language, as CL binaries are too big. Consider ECL, or some Scheme.

* Create command line options parsing from configuration schemas.

  - Print command line help from schema.
  - Create a configuration from a schema, from command line.
  - Parse configuration options as command line arguments, like: --web.host=...
  - Command line completion based on schema.